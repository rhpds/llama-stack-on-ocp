{
    "openapi": "3.1.0",
    "info": {
      "title": "FastAPI",
      "version": "0.1.0"
    },
    "paths": {
      "/v1/eval/benchmarks/{benchmark_id}/evaluations": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_eval_benchmarks__benchmark_id__evaluations_post",
          "parameters": [
            {
              "name": "benchmark_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "benchmark_id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_eval_benchmarks__benchmark_id__evaluations_post"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/eval/benchmarks/{benchmark_id}/jobs/{job_id}": {
        "delete": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_eval_benchmarks__benchmark_id__jobs__job_id__delete",
          "parameters": [
            {
              "name": "benchmark_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Benchmark Id"
              }
            },
            {
              "name": "job_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Job Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_eval_benchmarks__benchmark_id__jobs__job_id__get",
          "parameters": [
            {
              "name": "benchmark_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Benchmark Id"
              }
            },
            {
              "name": "job_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Job Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/eval/benchmarks/{benchmark_id}/jobs/{job_id}/result": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_eval_benchmarks__benchmark_id__jobs__job_id__result_get",
          "parameters": [
            {
              "name": "benchmark_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Benchmark Id"
              }
            },
            {
              "name": "job_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Job Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/eval/benchmarks/{benchmark_id}/jobs": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_eval_benchmarks__benchmark_id__jobs_post",
          "parameters": [
            {
              "name": "benchmark_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "benchmark_id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_eval_benchmarks__benchmark_id__jobs_post"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/shields/{identifier}": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_shields__identifier__get",
          "parameters": [
            {
              "name": "identifier",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Identifier"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/shields": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_shields_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_shields_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_shields_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/datasets/{dataset_id}": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_datasets__dataset_id__get",
          "parameters": [
            {
              "name": "dataset_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Dataset Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_datasets__dataset_id__delete",
          "parameters": [
            {
              "name": "dataset_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Dataset Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/datasets": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_datasets_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_datasets_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_datasets_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/providers/{provider_id}": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_providers__provider_id__get",
          "parameters": [
            {
              "name": "provider_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Provider Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/providers": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_providers_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            }
          }
        }
      },
      "/v1/health": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_health_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            }
          }
        }
      },
      "/v1/inspect/providers": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_inspect_providers_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            }
          }
        }
      },
      "/v1/inspect/routes": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_inspect_routes_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            }
          }
        }
      },
      "/v1/version": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_version_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            }
          }
        }
      },
      "/v1/vector-io/insert": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_vector_io_insert_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_vector_io_insert_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/vector-io/query": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_vector_io_query_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_vector_io_query_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/models/{model_id}": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_models__model_id__get",
          "parameters": [
            {
              "name": "model_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Model Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_models__model_id__delete",
          "parameters": [
            {
              "name": "model_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Model Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/models": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_models_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_models_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_models_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/inference/chat-completion": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_inference_chat_completion_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_inference_chat_completion_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/inference/completion": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_inference_completion_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_inference_completion_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/inference/embeddings": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_inference_embeddings_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_inference_embeddings_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/agents": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_agents_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_agents_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_agents_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/agents/{agent_id}/session": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_agents__agent_id__session_post",
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "agent_id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_agents__agent_id__session_post"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/agents/{agent_id}/session/{session_id}/turn": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_agents__agent_id__session__session_id__turn_post",
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "agent_id"
              }
            },
            {
              "name": "session_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "session_id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_agents__agent_id__session__session_id__turn_post"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/agents/{agent_id}": {
        "delete": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_agents__agent_id__delete",
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Agent Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_agents__agent_id__get",
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Agent Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/agents/{agent_id}/session/{session_id}": {
        "delete": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_agents__agent_id__session__session_id__delete",
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Agent Id"
              }
            },
            {
              "name": "session_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Session Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_agents__agent_id__session__session_id__get",
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Agent Id"
              }
            },
            {
              "name": "session_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Session Id"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Turn Ids"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/agents/{agent_id}/session/{session_id}/turn/{turn_id}/step/{step_id}": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_agents__agent_id__session__session_id__turn__turn_id__step__step_id__get",
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Agent Id"
              }
            },
            {
              "name": "session_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Session Id"
              }
            },
            {
              "name": "turn_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Turn Id"
              }
            },
            {
              "name": "step_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Step Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/agents/{agent_id}/session/{session_id}/turn/{turn_id}": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_agents__agent_id__session__session_id__turn__turn_id__get",
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Agent Id"
              }
            },
            {
              "name": "session_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Session Id"
              }
            },
            {
              "name": "turn_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Turn Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/agents/{agent_id}/sessions": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_agents__agent_id__sessions_get",
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Agent Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/agents/{agent_id}/session/{session_id}/turn/{turn_id}/resume": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_agents__agent_id__session__session_id__turn__turn_id__resume_post",
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "agent_id"
              }
            },
            {
              "name": "session_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "session_id"
              }
            },
            {
              "name": "turn_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "turn_id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_agents__agent_id__session__session_id__turn__turn_id__resume_post"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/vector-dbs/{vector_db_id}": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_vector_dbs__vector_db_id__get",
          "parameters": [
            {
              "name": "vector_db_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Vector Db Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_vector_dbs__vector_db_id__delete",
          "parameters": [
            {
              "name": "vector_db_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Vector Db Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/vector-dbs": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_vector_dbs_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_vector_dbs_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_vector_dbs_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/tool-runtime/invoke": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_tool_runtime_invoke_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_tool_runtime_invoke_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/tool-runtime/list-tools": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_tool_runtime_list_tools_get",
          "parameters": [
            {
              "name": "tool_group_id",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Tool Group Id"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/URL"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Mcp Endpoint"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/tool-runtime/rag-tool/insert": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_tool_runtime_rag_tool_insert_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_tool_runtime_rag_tool_insert_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/tool-runtime/rag-tool/query": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_tool_runtime_rag_tool_query_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_tool_runtime_rag_tool_query_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/safety/run-shield": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_safety_run_shield_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_safety_run_shield_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/scoring/score": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_scoring_score_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_scoring_score_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/scoring/score-batch": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_scoring_score_batch_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_scoring_score_batch_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/telemetry/traces/{trace_id}/spans/{span_id}": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_telemetry_traces__trace_id__spans__span_id__get",
          "parameters": [
            {
              "name": "trace_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Trace Id"
              }
            },
            {
              "name": "span_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Span Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/telemetry/spans/{span_id}/tree": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_telemetry_spans__span_id__tree_post",
          "parameters": [
            {
              "name": "span_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "span_id"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_telemetry_spans__span_id__tree_post"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/telemetry/traces/{trace_id}": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_telemetry_traces__trace_id__get",
          "parameters": [
            {
              "name": "trace_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Trace Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/telemetry/events": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_telemetry_events_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_telemetry_events_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/telemetry/spans": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_telemetry_spans_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_telemetry_spans_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/telemetry/traces": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_telemetry_traces_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_telemetry_traces_post"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/telemetry/spans/export": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_telemetry_spans_export_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_telemetry_spans_export_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/scoring-functions/{scoring_fn_id}": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_scoring_functions__scoring_fn_id__get",
          "parameters": [
            {
              "name": "scoring_fn_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Scoring Fn Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/scoring-functions": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_scoring_functions_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_scoring_functions_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_scoring_functions_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/datasetio/rows": {
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_datasetio_rows_post",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_datasetio_rows_post"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_datasetio_rows_get",
          "parameters": [
            {
              "name": "dataset_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Dataset Id"
              }
            },
            {
              "name": "rows_in_page",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer",
                "title": "Rows In Page"
              }
            },
            {
              "name": "page_token",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Page Token"
              }
            },
            {
              "name": "filter_condition",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Filter Condition"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/eval/benchmarks/{benchmark_id}": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_eval_benchmarks__benchmark_id__get",
          "parameters": [
            {
              "name": "benchmark_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Benchmark Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/eval/benchmarks": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_eval_benchmarks_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_eval_benchmarks_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_eval_benchmarks_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/tools/{tool_name}": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_tools__tool_name__get",
          "parameters": [
            {
              "name": "tool_name",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Tool Name"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/toolgroups/{toolgroup_id}": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_toolgroups__toolgroup_id__get",
          "parameters": [
            {
              "name": "toolgroup_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Toolgroup Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_toolgroups__toolgroup_id__delete",
          "parameters": [
            {
              "name": "toolgroup_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Toolgroup Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/toolgroups": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_toolgroups_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_toolgroups_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Body_endpoint_v1_toolgroups_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/tools": {
        "get": {
          "summary": "Endpoint",
          "operationId": "endpoint_v1_tools_get",
          "parameters": [
            {
              "name": "toolgroup_id",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Toolgroup Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {

                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "AgentCandidate": {
          "properties": {
            "type": {
              "type": "string",
              "const": "agent",
              "title": "Type",
              "default": "agent"
            },
            "config": {
              "$ref": "#/components/schemas/AgentConfig"
            }
          },
          "type": "object",
          "required": [
            "config"
          ],
          "title": "AgentCandidate",
          "description": "An agent candidate for evaluation.\n\n:param config: The configuration for the agent candidate."
        },
        "AgentConfig": {
          "properties": {
            "sampling_params": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SamplingParams"
                },
                {
                  "type": "null"
                }
              ]
            },
            "input_shields": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Input Shields"
            },
            "output_shields": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Output Shields"
            },
            "toolgroups": {
              "anyOf": [
                {
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/AgentToolGroupWithArgs"
                      }
                    ]
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Toolgroups"
            },
            "client_tools": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/ToolDef"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Client Tools"
            },
            "tool_choice": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ToolChoice"
                },
                {
                  "type": "null"
                }
              ],
              "deprecated": true
            },
            "tool_prompt_format": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ToolPromptFormat"
                },
                {
                  "type": "null"
                }
              ],
              "deprecated": true
            },
            "tool_config": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ToolConfig"
                },
                {
                  "type": "null"
                }
              ]
            },
            "max_infer_iters": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Infer Iters",
              "default": 10
            },
            "model": {
              "type": "string",
              "title": "Model"
            },
            "instructions": {
              "type": "string",
              "title": "Instructions"
            },
            "enable_session_persistence": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Enable Session Persistence",
              "default": false
            },
            "response_format": {
              "anyOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JsonSchemaResponseFormat"
                    },
                    {
                      "$ref": "#/components/schemas/GrammarResponseFormat"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "grammar": "#/components/schemas/GrammarResponseFormat",
                      "json_schema": "#/components/schemas/JsonSchemaResponseFormat"
                    }
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Response Format"
            }
          },
          "type": "object",
          "required": [
            "model",
            "instructions"
          ],
          "title": "AgentConfig"
        },
        "AgentToolGroupWithArgs": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name"
            },
            "args": {
              "type": "object",
              "title": "Args"
            }
          },
          "type": "object",
          "required": [
            "name",
            "args"
          ],
          "title": "AgentToolGroupWithArgs"
        },
        "AgentTurnInputType": {
          "properties": {
            "type": {
              "type": "string",
              "const": "agent_turn_input",
              "title": "Type",
              "default": "agent_turn_input"
            }
          },
          "type": "object",
          "title": "AgentTurnInputType"
        },
        "AggregationFunctionType": {
          "type": "string",
          "enum": [
            "average",
            "median",
            "categorical_count",
            "accuracy"
          ],
          "title": "AggregationFunctionType"
        },
        "ArrayType": {
          "properties": {
            "type": {
              "type": "string",
              "const": "array",
              "title": "Type",
              "default": "array"
            }
          },
          "type": "object",
          "title": "ArrayType"
        },
        "BasicScoringFnParams": {
          "properties": {
            "type": {
              "type": "string",
              "const": "basic",
              "title": "Type",
              "default": "basic"
            },
            "aggregation_functions": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/AggregationFunctionType"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aggregation Functions",
              "description": "Aggregation functions to apply to the scores of each row"
            }
          },
          "type": "object",
          "title": "BasicScoringFnParams"
        },
        "BenchmarkConfig": {
          "properties": {
            "eval_candidate": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ModelCandidate"
                },
                {
                  "$ref": "#/components/schemas/AgentCandidate"
                }
              ],
              "title": "Eval Candidate",
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "agent": "#/components/schemas/AgentCandidate",
                  "model": "#/components/schemas/ModelCandidate"
                }
              }
            },
            "scoring_params": {
              "additionalProperties": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/LLMAsJudgeScoringFnParams"
                  },
                  {
                    "$ref": "#/components/schemas/RegexParserScoringFnParams"
                  },
                  {
                    "$ref": "#/components/schemas/BasicScoringFnParams"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "basic": "#/components/schemas/BasicScoringFnParams",
                    "llm_as_judge": "#/components/schemas/LLMAsJudgeScoringFnParams",
                    "regex_parser": "#/components/schemas/RegexParserScoringFnParams"
                  }
                }
              },
              "type": "object",
              "title": "Scoring Params",
              "description": "Map between scoring function id and parameters for each scoring function you want to run"
            },
            "num_examples": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Num Examples",
              "description": "Number of examples to evaluate (useful for testing), if not provided, all examples in the dataset will be evaluated"
            }
          },
          "type": "object",
          "required": [
            "eval_candidate"
          ],
          "title": "BenchmarkConfig",
          "description": "A benchmark configuration for evaluation.\n\n:param eval_candidate: The candidate to evaluate.\n:param scoring_params: Map between scoring function id and parameters for each scoring function you want to run\n:param num_examples: (Optional) The number of examples to evaluate. If not provided, all examples in the dataset will be evaluated"
        },
        "Body_endpoint_v1_agents__agent_id__session__session_id__turn__turn_id__resume_post": {
          "properties": {
            "tool_responses": {
              "items": {
                "$ref": "#/components/schemas/ToolResponse"
              },
              "type": "array",
              "title": "Tool Responses"
            },
            "stream": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Stream",
              "default": false
            }
          },
          "type": "object",
          "required": [
            "tool_responses"
          ],
          "title": "Body_endpoint_v1_agents__agent_id__session__session_id__turn__turn_id__resume_post"
        },
        "Body_endpoint_v1_agents__agent_id__session__session_id__turn_post": {
          "properties": {
            "messages": {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/UserMessage"
                  },
                  {
                    "$ref": "#/components/schemas/ToolResponseMessage"
                  }
                ]
              },
              "type": "array",
              "title": "Messages"
            },
            "toolgroups": {
              "anyOf": [
                {
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/AgentToolGroupWithArgs"
                      }
                    ]
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Toolgroups"
            },
            "documents": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Documents"
            },
            "stream": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Stream",
              "default": false
            },
            "tool_config": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ToolConfig"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "messages"
          ],
          "title": "Body_endpoint_v1_agents__agent_id__session__session_id__turn_post"
        },
        "Body_endpoint_v1_agents__agent_id__session_post": {
          "properties": {
            "session_name": {
              "type": "string",
              "title": "Session Name"
            }
          },
          "type": "object",
          "required": [
            "session_name"
          ],
          "title": "Body_endpoint_v1_agents__agent_id__session_post"
        },
        "Body_endpoint_v1_agents_post": {
          "properties": {
            "agent_config": {
              "$ref": "#/components/schemas/AgentConfig"
            }
          },
          "type": "object",
          "required": [
            "agent_config"
          ],
          "title": "Body_endpoint_v1_agents_post"
        },
        "Body_endpoint_v1_datasetio_rows_post": {
          "properties": {
            "dataset_id": {
              "type": "string",
              "title": "Dataset Id"
            },
            "rows": {
              "items": {
                "type": "object"
              },
              "type": "array",
              "title": "Rows"
            }
          },
          "type": "object",
          "required": [
            "dataset_id",
            "rows"
          ],
          "title": "Body_endpoint_v1_datasetio_rows_post"
        },
        "Body_endpoint_v1_datasets_post": {
          "properties": {
            "dataset_id": {
              "type": "string",
              "title": "Dataset Id"
            },
            "dataset_schema": {
              "additionalProperties": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/StringType"
                  },
                  {
                    "$ref": "#/components/schemas/NumberType"
                  },
                  {
                    "$ref": "#/components/schemas/BooleanType"
                  },
                  {
                    "$ref": "#/components/schemas/ArrayType"
                  },
                  {
                    "$ref": "#/components/schemas/ObjectType"
                  },
                  {
                    "$ref": "#/components/schemas/JsonType"
                  },
                  {
                    "$ref": "#/components/schemas/UnionType"
                  },
                  {
                    "$ref": "#/components/schemas/ChatCompletionInputType"
                  },
                  {
                    "$ref": "#/components/schemas/CompletionInputType"
                  },
                  {
                    "$ref": "#/components/schemas/AgentTurnInputType"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "agent_turn_input": "#/components/schemas/AgentTurnInputType",
                    "array": "#/components/schemas/ArrayType",
                    "boolean": "#/components/schemas/BooleanType",
                    "chat_completion_input": "#/components/schemas/ChatCompletionInputType",
                    "completion_input": "#/components/schemas/CompletionInputType",
                    "json": "#/components/schemas/JsonType",
                    "number": "#/components/schemas/NumberType",
                    "object": "#/components/schemas/ObjectType",
                    "string": "#/components/schemas/StringType",
                    "union": "#/components/schemas/UnionType"
                  }
                }
              },
              "type": "object",
              "title": "Dataset Schema"
            },
            "url": {
              "$ref": "#/components/schemas/URL"
            },
            "provider_dataset_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Dataset Id"
            },
            "provider_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Id"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            }
          },
          "type": "object",
          "required": [
            "dataset_id",
            "dataset_schema",
            "url"
          ],
          "title": "Body_endpoint_v1_datasets_post"
        },
        "Body_endpoint_v1_eval_benchmarks__benchmark_id__evaluations_post": {
          "properties": {
            "input_rows": {
              "items": {
                "type": "object"
              },
              "type": "array",
              "title": "Input Rows"
            },
            "scoring_functions": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Scoring Functions"
            },
            "benchmark_config": {
              "$ref": "#/components/schemas/BenchmarkConfig"
            }
          },
          "type": "object",
          "required": [
            "input_rows",
            "scoring_functions",
            "benchmark_config"
          ],
          "title": "Body_endpoint_v1_eval_benchmarks__benchmark_id__evaluations_post"
        },
        "Body_endpoint_v1_eval_benchmarks__benchmark_id__jobs_post": {
          "properties": {
            "benchmark_config": {
              "$ref": "#/components/schemas/BenchmarkConfig"
            }
          },
          "type": "object",
          "required": [
            "benchmark_config"
          ],
          "title": "Body_endpoint_v1_eval_benchmarks__benchmark_id__jobs_post"
        },
        "Body_endpoint_v1_eval_benchmarks_post": {
          "properties": {
            "benchmark_id": {
              "type": "string",
              "title": "Benchmark Id"
            },
            "dataset_id": {
              "type": "string",
              "title": "Dataset Id"
            },
            "scoring_functions": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Scoring Functions"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            },
            "provider_benchmark_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Benchmark Id"
            },
            "provider_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Id"
            }
          },
          "type": "object",
          "required": [
            "benchmark_id",
            "dataset_id",
            "scoring_functions"
          ],
          "title": "Body_endpoint_v1_eval_benchmarks_post"
        },
        "Body_endpoint_v1_inference_chat_completion_post": {
          "properties": {
            "model_id": {
              "type": "string",
              "title": "Model Id"
            },
            "messages": {
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UserMessage"
                  },
                  {
                    "$ref": "#/components/schemas/SystemMessage"
                  },
                  {
                    "$ref": "#/components/schemas/ToolResponseMessage"
                  },
                  {
                    "$ref": "#/components/schemas/CompletionMessage"
                  }
                ],
                "discriminator": {
                  "propertyName": "role",
                  "mapping": {
                    "assistant": "#/components/schemas/CompletionMessage",
                    "system": "#/components/schemas/SystemMessage",
                    "tool": "#/components/schemas/ToolResponseMessage",
                    "user": "#/components/schemas/UserMessage"
                  }
                }
              },
              "type": "array",
              "title": "Messages"
            },
            "sampling_params": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SamplingParams"
                },
                {
                  "type": "null"
                }
              ]
            },
            "response_format": {
              "anyOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JsonSchemaResponseFormat"
                    },
                    {
                      "$ref": "#/components/schemas/GrammarResponseFormat"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "grammar": "#/components/schemas/GrammarResponseFormat",
                      "json_schema": "#/components/schemas/JsonSchemaResponseFormat"
                    }
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Response Format"
            },
            "tools": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/ToolDefinition"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tools"
            },
            "tool_choice": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ToolChoice"
                },
                {
                  "type": "null"
                }
              ]
            },
            "tool_prompt_format": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ToolPromptFormat"
                },
                {
                  "type": "null"
                }
              ]
            },
            "stream": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Stream",
              "default": false
            },
            "logprobs": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LogProbConfig"
                },
                {
                  "type": "null"
                }
              ]
            },
            "tool_config": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ToolConfig"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "model_id",
            "messages"
          ],
          "title": "Body_endpoint_v1_inference_chat_completion_post"
        },
        "Body_endpoint_v1_inference_completion_post": {
          "properties": {
            "model_id": {
              "type": "string",
              "title": "Model Id"
            },
            "content": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ImageContentItem"
                    },
                    {
                      "$ref": "#/components/schemas/TextContentItem"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image": "#/components/schemas/ImageContentItem",
                      "text": "#/components/schemas/TextContentItem"
                    }
                  }
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ImageContentItem"
                      },
                      {
                        "$ref": "#/components/schemas/TextContentItem"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "image": "#/components/schemas/ImageContentItem",
                        "text": "#/components/schemas/TextContentItem"
                      }
                    }
                  },
                  "type": "array"
                }
              ],
              "title": "Content"
            },
            "sampling_params": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SamplingParams"
                },
                {
                  "type": "null"
                }
              ]
            },
            "response_format": {
              "anyOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JsonSchemaResponseFormat"
                    },
                    {
                      "$ref": "#/components/schemas/GrammarResponseFormat"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "grammar": "#/components/schemas/GrammarResponseFormat",
                      "json_schema": "#/components/schemas/JsonSchemaResponseFormat"
                    }
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Response Format"
            },
            "stream": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Stream",
              "default": false
            },
            "logprobs": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LogProbConfig"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "model_id",
            "content"
          ],
          "title": "Body_endpoint_v1_inference_completion_post"
        },
        "Body_endpoint_v1_inference_embeddings_post": {
          "properties": {
            "model_id": {
              "type": "string",
              "title": "Model Id"
            },
            "contents": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ImageContentItem"
                      },
                      {
                        "$ref": "#/components/schemas/TextContentItem"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "image": "#/components/schemas/ImageContentItem",
                        "text": "#/components/schemas/TextContentItem"
                      }
                    }
                  },
                  "type": "array"
                }
              ],
              "title": "Contents"
            },
            "text_truncation": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TextTruncation"
                },
                {
                  "type": "null"
                }
              ],
              "default": "none"
            },
            "output_dimension": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Output Dimension"
            },
            "task_type": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EmbeddingTaskType"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "model_id",
            "contents"
          ],
          "title": "Body_endpoint_v1_inference_embeddings_post"
        },
        "Body_endpoint_v1_models_post": {
          "properties": {
            "model_id": {
              "type": "string",
              "title": "Model Id"
            },
            "provider_model_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Model Id"
            },
            "provider_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Id"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            },
            "model_type": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ModelType"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "model_id"
          ],
          "title": "Body_endpoint_v1_models_post"
        },
        "Body_endpoint_v1_safety_run_shield_post": {
          "properties": {
            "shield_id": {
              "type": "string",
              "title": "Shield Id"
            },
            "messages": {
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UserMessage"
                  },
                  {
                    "$ref": "#/components/schemas/SystemMessage"
                  },
                  {
                    "$ref": "#/components/schemas/ToolResponseMessage"
                  },
                  {
                    "$ref": "#/components/schemas/CompletionMessage"
                  }
                ],
                "discriminator": {
                  "propertyName": "role",
                  "mapping": {
                    "assistant": "#/components/schemas/CompletionMessage",
                    "system": "#/components/schemas/SystemMessage",
                    "tool": "#/components/schemas/ToolResponseMessage",
                    "user": "#/components/schemas/UserMessage"
                  }
                }
              },
              "type": "array",
              "title": "Messages"
            },
            "params": {
              "type": "object",
              "title": "Params"
            }
          },
          "type": "object",
          "required": [
            "shield_id",
            "messages"
          ],
          "title": "Body_endpoint_v1_safety_run_shield_post"
        },
        "Body_endpoint_v1_scoring_functions_post": {
          "properties": {
            "scoring_fn_id": {
              "type": "string",
              "title": "Scoring Fn Id"
            },
            "description": {
              "type": "string",
              "title": "Description"
            },
            "return_type": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/StringType"
                },
                {
                  "$ref": "#/components/schemas/NumberType"
                },
                {
                  "$ref": "#/components/schemas/BooleanType"
                },
                {
                  "$ref": "#/components/schemas/ArrayType"
                },
                {
                  "$ref": "#/components/schemas/ObjectType"
                },
                {
                  "$ref": "#/components/schemas/JsonType"
                },
                {
                  "$ref": "#/components/schemas/UnionType"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionInputType"
                },
                {
                  "$ref": "#/components/schemas/CompletionInputType"
                },
                {
                  "$ref": "#/components/schemas/AgentTurnInputType"
                }
              ],
              "title": "Return Type"
            },
            "provider_scoring_fn_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Scoring Fn Id"
            },
            "provider_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Id"
            },
            "params": {
              "anyOf": [
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/LLMAsJudgeScoringFnParams"
                    },
                    {
                      "$ref": "#/components/schemas/RegexParserScoringFnParams"
                    },
                    {
                      "$ref": "#/components/schemas/BasicScoringFnParams"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "basic": "#/components/schemas/BasicScoringFnParams",
                      "llm_as_judge": "#/components/schemas/LLMAsJudgeScoringFnParams",
                      "regex_parser": "#/components/schemas/RegexParserScoringFnParams"
                    }
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Params"
            }
          },
          "type": "object",
          "required": [
            "scoring_fn_id",
            "description",
            "return_type"
          ],
          "title": "Body_endpoint_v1_scoring_functions_post"
        },
        "Body_endpoint_v1_scoring_score_batch_post": {
          "properties": {
            "dataset_id": {
              "type": "string",
              "title": "Dataset Id"
            },
            "scoring_functions": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/LLMAsJudgeScoringFnParams"
                      },
                      {
                        "$ref": "#/components/schemas/RegexParserScoringFnParams"
                      },
                      {
                        "$ref": "#/components/schemas/BasicScoringFnParams"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "basic": "#/components/schemas/BasicScoringFnParams",
                        "llm_as_judge": "#/components/schemas/LLMAsJudgeScoringFnParams",
                        "regex_parser": "#/components/schemas/RegexParserScoringFnParams"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "type": "object",
              "title": "Scoring Functions"
            },
            "save_results_dataset": {
              "type": "boolean",
              "title": "Save Results Dataset",
              "default": false
            }
          },
          "type": "object",
          "required": [
            "dataset_id"
          ],
          "title": "Body_endpoint_v1_scoring_score_batch_post"
        },
        "Body_endpoint_v1_scoring_score_post": {
          "properties": {
            "input_rows": {
              "items": {
                "type": "object"
              },
              "type": "array",
              "title": "Input Rows"
            },
            "scoring_functions": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/LLMAsJudgeScoringFnParams"
                      },
                      {
                        "$ref": "#/components/schemas/RegexParserScoringFnParams"
                      },
                      {
                        "$ref": "#/components/schemas/BasicScoringFnParams"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "basic": "#/components/schemas/BasicScoringFnParams",
                        "llm_as_judge": "#/components/schemas/LLMAsJudgeScoringFnParams",
                        "regex_parser": "#/components/schemas/RegexParserScoringFnParams"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "type": "object",
              "title": "Scoring Functions"
            }
          },
          "type": "object",
          "required": [
            "input_rows"
          ],
          "title": "Body_endpoint_v1_scoring_score_post"
        },
        "Body_endpoint_v1_shields_post": {
          "properties": {
            "shield_id": {
              "type": "string",
              "title": "Shield Id"
            },
            "provider_shield_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Shield Id"
            },
            "provider_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Id"
            },
            "params": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Params"
            }
          },
          "type": "object",
          "required": [
            "shield_id"
          ],
          "title": "Body_endpoint_v1_shields_post"
        },
        "Body_endpoint_v1_telemetry_events_post": {
          "properties": {
            "event": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UnstructuredLogEvent"
                },
                {
                  "$ref": "#/components/schemas/MetricEvent"
                },
                {
                  "$ref": "#/components/schemas/StructuredLogEvent"
                }
              ],
              "title": "Event"
            },
            "ttl_seconds": {
              "type": "integer",
              "title": "Ttl Seconds",
              "default": 604800
            }
          },
          "type": "object",
          "required": [
            "event"
          ],
          "title": "Body_endpoint_v1_telemetry_events_post"
        },
        "Body_endpoint_v1_telemetry_spans__span_id__tree_post": {
          "properties": {
            "attributes_to_return": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Attributes To Return"
            },
            "max_depth": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Depth"
            }
          },
          "type": "object",
          "title": "Body_endpoint_v1_telemetry_spans__span_id__tree_post"
        },
        "Body_endpoint_v1_telemetry_spans_export_post": {
          "properties": {
            "attribute_filters": {
              "items": {
                "$ref": "#/components/schemas/QueryCondition"
              },
              "type": "array",
              "title": "Attribute Filters"
            },
            "attributes_to_save": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Attributes To Save"
            },
            "dataset_id": {
              "type": "string",
              "title": "Dataset Id"
            },
            "max_depth": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Depth"
            }
          },
          "type": "object",
          "required": [
            "attribute_filters",
            "attributes_to_save",
            "dataset_id"
          ],
          "title": "Body_endpoint_v1_telemetry_spans_export_post"
        },
        "Body_endpoint_v1_telemetry_spans_post": {
          "properties": {
            "attribute_filters": {
              "items": {
                "$ref": "#/components/schemas/QueryCondition"
              },
              "type": "array",
              "title": "Attribute Filters"
            },
            "attributes_to_return": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Attributes To Return"
            },
            "max_depth": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Depth"
            }
          },
          "type": "object",
          "required": [
            "attribute_filters",
            "attributes_to_return"
          ],
          "title": "Body_endpoint_v1_telemetry_spans_post"
        },
        "Body_endpoint_v1_telemetry_traces_post": {
          "properties": {
            "attribute_filters": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/QueryCondition"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Attribute Filters"
            },
            "limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit",
              "default": 100
            },
            "offset": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Offset",
              "default": 0
            },
            "order_by": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order By"
            }
          },
          "type": "object",
          "title": "Body_endpoint_v1_telemetry_traces_post"
        },
        "Body_endpoint_v1_tool_runtime_invoke_post": {
          "properties": {
            "tool_name": {
              "type": "string",
              "title": "Tool Name"
            },
            "kwargs": {
              "type": "object",
              "title": "Kwargs"
            }
          },
          "type": "object",
          "required": [
            "tool_name",
            "kwargs"
          ],
          "title": "Body_endpoint_v1_tool_runtime_invoke_post"
        },
        "Body_endpoint_v1_tool_runtime_rag_tool_insert_post": {
          "properties": {
            "documents": {
              "items": {
                "$ref": "#/components/schemas/RAGDocument"
              },
              "type": "array",
              "title": "Documents"
            },
            "vector_db_id": {
              "type": "string",
              "title": "Vector Db Id"
            },
            "chunk_size_in_tokens": {
              "type": "integer",
              "title": "Chunk Size In Tokens",
              "default": 512
            }
          },
          "type": "object",
          "required": [
            "documents",
            "vector_db_id"
          ],
          "title": "Body_endpoint_v1_tool_runtime_rag_tool_insert_post"
        },
        "Body_endpoint_v1_tool_runtime_rag_tool_query_post": {
          "properties": {
            "content": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ImageContentItem"
                    },
                    {
                      "$ref": "#/components/schemas/TextContentItem"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image": "#/components/schemas/ImageContentItem",
                      "text": "#/components/schemas/TextContentItem"
                    }
                  }
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ImageContentItem"
                      },
                      {
                        "$ref": "#/components/schemas/TextContentItem"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "image": "#/components/schemas/ImageContentItem",
                        "text": "#/components/schemas/TextContentItem"
                      }
                    }
                  },
                  "type": "array"
                }
              ],
              "title": "Content"
            },
            "vector_db_ids": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Vector Db Ids"
            },
            "query_config": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/RAGQueryConfig"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "content",
            "vector_db_ids"
          ],
          "title": "Body_endpoint_v1_tool_runtime_rag_tool_query_post"
        },
        "Body_endpoint_v1_toolgroups_post": {
          "properties": {
            "toolgroup_id": {
              "type": "string",
              "title": "Toolgroup Id"
            },
            "provider_id": {
              "type": "string",
              "title": "Provider Id"
            },
            "mcp_endpoint": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/URL"
                },
                {
                  "type": "null"
                }
              ]
            },
            "args": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Args"
            }
          },
          "type": "object",
          "required": [
            "toolgroup_id",
            "provider_id"
          ],
          "title": "Body_endpoint_v1_toolgroups_post"
        },
        "Body_endpoint_v1_vector_dbs_post": {
          "properties": {
            "vector_db_id": {
              "type": "string",
              "title": "Vector Db Id"
            },
            "embedding_model": {
              "type": "string",
              "title": "Embedding Model"
            },
            "embedding_dimension": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Embedding Dimension",
              "default": 384
            },
            "provider_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Id"
            },
            "provider_vector_db_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Vector Db Id"
            }
          },
          "type": "object",
          "required": [
            "vector_db_id",
            "embedding_model"
          ],
          "title": "Body_endpoint_v1_vector_dbs_post"
        },
        "Body_endpoint_v1_vector_io_insert_post": {
          "properties": {
            "vector_db_id": {
              "type": "string",
              "title": "Vector Db Id"
            },
            "chunks": {
              "items": {
                "$ref": "#/components/schemas/Chunk"
              },
              "type": "array",
              "title": "Chunks"
            },
            "ttl_seconds": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ttl Seconds"
            }
          },
          "type": "object",
          "required": [
            "vector_db_id",
            "chunks"
          ],
          "title": "Body_endpoint_v1_vector_io_insert_post"
        },
        "Body_endpoint_v1_vector_io_query_post": {
          "properties": {
            "vector_db_id": {
              "type": "string",
              "title": "Vector Db Id"
            },
            "query": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ImageContentItem"
                    },
                    {
                      "$ref": "#/components/schemas/TextContentItem"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image": "#/components/schemas/ImageContentItem",
                      "text": "#/components/schemas/TextContentItem"
                    }
                  }
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ImageContentItem"
                      },
                      {
                        "$ref": "#/components/schemas/TextContentItem"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "image": "#/components/schemas/ImageContentItem",
                        "text": "#/components/schemas/TextContentItem"
                      }
                    }
                  },
                  "type": "array"
                }
              ],
              "title": "Query"
            },
            "params": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Params"
            }
          },
          "type": "object",
          "required": [
            "vector_db_id",
            "query"
          ],
          "title": "Body_endpoint_v1_vector_io_query_post"
        },
        "BooleanType": {
          "properties": {
            "type": {
              "type": "string",
              "const": "boolean",
              "title": "Type",
              "default": "boolean"
            }
          },
          "type": "object",
          "title": "BooleanType"
        },
        "BuiltinTool": {
          "type": "string",
          "enum": [
            "brave_search",
            "wolfram_alpha",
            "photogen",
            "code_interpreter"
          ],
          "title": "BuiltinTool"
        },
        "ChatCompletionInputType": {
          "properties": {
            "type": {
              "type": "string",
              "const": "chat_completion_input",
              "title": "Type",
              "default": "chat_completion_input"
            }
          },
          "type": "object",
          "title": "ChatCompletionInputType"
        },
        "Chunk": {
          "properties": {
            "content": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ImageContentItem"
                    },
                    {
                      "$ref": "#/components/schemas/TextContentItem"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image": "#/components/schemas/ImageContentItem",
                      "text": "#/components/schemas/TextContentItem"
                    }
                  }
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ImageContentItem"
                      },
                      {
                        "$ref": "#/components/schemas/TextContentItem"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "image": "#/components/schemas/ImageContentItem",
                        "text": "#/components/schemas/TextContentItem"
                      }
                    }
                  },
                  "type": "array"
                }
              ],
              "title": "Content"
            },
            "metadata": {
              "type": "object",
              "title": "Metadata"
            }
          },
          "type": "object",
          "required": [
            "content"
          ],
          "title": "Chunk"
        },
        "CompletionInputType": {
          "properties": {
            "type": {
              "type": "string",
              "const": "completion_input",
              "title": "Type",
              "default": "completion_input"
            }
          },
          "type": "object",
          "title": "CompletionInputType"
        },
        "CompletionMessage": {
          "properties": {
            "role": {
              "type": "string",
              "const": "assistant",
              "title": "Role",
              "default": "assistant"
            },
            "content": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ImageContentItem"
                    },
                    {
                      "$ref": "#/components/schemas/TextContentItem"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image": "#/components/schemas/ImageContentItem",
                      "text": "#/components/schemas/TextContentItem"
                    }
                  }
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ImageContentItem"
                      },
                      {
                        "$ref": "#/components/schemas/TextContentItem"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "image": "#/components/schemas/ImageContentItem",
                        "text": "#/components/schemas/TextContentItem"
                      }
                    }
                  },
                  "type": "array"
                }
              ],
              "title": "Content"
            },
            "stop_reason": {
              "$ref": "#/components/schemas/StopReason"
            },
            "tool_calls": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/ToolCall"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tool Calls"
            }
          },
          "type": "object",
          "required": [
            "content",
            "stop_reason"
          ],
          "title": "CompletionMessage",
          "description": "A message containing the model's (assistant) response in a chat conversation.\n\n:param role: Must be \"assistant\" to identify this as the model's response\n:param content: The content of the model's response\n:param stop_reason: Reason why the model stopped generating. Options are:\n    - `StopReason.end_of_turn`: The model finished generating the entire response.\n    - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response.\n    - `StopReason.out_of_tokens`: The model ran out of token budget.\n:param tool_calls: List of tool calls. Each tool call is a ToolCall object."
        },
        "DefaultRAGQueryGeneratorConfig": {
          "properties": {
            "type": {
              "type": "string",
              "const": "default",
              "title": "Type",
              "default": "default"
            },
            "separator": {
              "type": "string",
              "title": "Separator",
              "default": " "
            }
          },
          "type": "object",
          "title": "DefaultRAGQueryGeneratorConfig"
        },
        "Document": {
          "properties": {
            "content": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ImageContentItem"
                    },
                    {
                      "$ref": "#/components/schemas/TextContentItem"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image": "#/components/schemas/ImageContentItem",
                      "text": "#/components/schemas/TextContentItem"
                    }
                  }
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ImageContentItem"
                      },
                      {
                        "$ref": "#/components/schemas/TextContentItem"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "image": "#/components/schemas/ImageContentItem",
                        "text": "#/components/schemas/TextContentItem"
                      }
                    }
                  },
                  "type": "array"
                },
                {
                  "$ref": "#/components/schemas/URL"
                }
              ],
              "title": "Content"
            },
            "mime_type": {
              "type": "string",
              "title": "Mime Type"
            }
          },
          "type": "object",
          "required": [
            "content",
            "mime_type"
          ],
          "title": "Document",
          "description": "A document to be used by an agent.\n\n:param content: The content of the document.\n:param mime_type: The MIME type of the document."
        },
        "EmbeddingTaskType": {
          "type": "string",
          "enum": [
            "query",
            "document"
          ],
          "title": "EmbeddingTaskType",
          "description": "How is the embedding being used? This is only supported by asymmetric embedding models.\n\n:cvar query: Used for a query for semantic search.\n:cvar document: Used at indexing time when ingesting documents."
        },
        "GrammarResponseFormat": {
          "properties": {
            "type": {
              "type": "string",
              "const": "grammar",
              "title": "Type",
              "default": "grammar"
            },
            "bnf": {
              "type": "object",
              "title": "Bnf"
            }
          },
          "type": "object",
          "required": [
            "bnf"
          ],
          "title": "GrammarResponseFormat",
          "description": "Configuration for grammar-guided response generation.\n\n:param type: Must be \"grammar\" to identify this format type\n:param bnf: The BNF grammar specification the response should conform to"
        },
        "GreedySamplingStrategy": {
          "properties": {
            "type": {
              "type": "string",
              "const": "greedy",
              "title": "Type",
              "default": "greedy"
            }
          },
          "type": "object",
          "title": "GreedySamplingStrategy"
        },
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },
        "ImageContentItem": {
          "properties": {
            "type": {
              "type": "string",
              "const": "image",
              "title": "Type",
              "default": "image"
            },
            "image": {
              "$ref": "#/components/schemas/_URLOrData"
            }
          },
          "type": "object",
          "required": [
            "image"
          ],
          "title": "ImageContentItem",
          "description": "A image content item\n\n:param type: Discriminator type of the content item. Always \"image\"\n:param image: Image as a base64 encoded string or an URL"
        },
        "JsonSchemaResponseFormat": {
          "properties": {
            "type": {
              "type": "string",
              "const": "json_schema",
              "title": "Type",
              "default": "json_schema"
            },
            "json_schema": {
              "type": "object",
              "title": "Json Schema"
            }
          },
          "type": "object",
          "required": [
            "json_schema"
          ],
          "title": "JsonSchemaResponseFormat",
          "description": "Configuration for JSON schema-guided response generation.\n\n:param type: Must be \"json_schema\" to identify this format type\n:param json_schema: The JSON schema the response should conform to. In a Python SDK, this is often a `pydantic` model."
        },
        "JsonType": {
          "properties": {
            "type": {
              "type": "string",
              "const": "json",
              "title": "Type",
              "default": "json"
            }
          },
          "type": "object",
          "title": "JsonType"
        },
        "LLMAsJudgeScoringFnParams": {
          "properties": {
            "type": {
              "type": "string",
              "const": "llm_as_judge",
              "title": "Type",
              "default": "llm_as_judge"
            },
            "judge_model": {
              "type": "string",
              "title": "Judge Model"
            },
            "prompt_template": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prompt Template"
            },
            "judge_score_regexes": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Judge Score Regexes",
              "description": "Regexes to extract the answer from generated response"
            },
            "aggregation_functions": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/AggregationFunctionType"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aggregation Functions",
              "description": "Aggregation functions to apply to the scores of each row"
            }
          },
          "type": "object",
          "required": [
            "judge_model"
          ],
          "title": "LLMAsJudgeScoringFnParams"
        },
        "LLMRAGQueryGeneratorConfig": {
          "properties": {
            "type": {
              "type": "string",
              "const": "llm",
              "title": "Type",
              "default": "llm"
            },
            "model": {
              "type": "string",
              "title": "Model"
            },
            "template": {
              "type": "string",
              "title": "Template"
            }
          },
          "type": "object",
          "required": [
            "model",
            "template"
          ],
          "title": "LLMRAGQueryGeneratorConfig"
        },
        "LogProbConfig": {
          "properties": {
            "top_k": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Top K",
              "default": 0
            }
          },
          "type": "object",
          "title": "LogProbConfig",
          "description": ":param top_k: How many tokens (for each position) to return log probabilities for."
        },
        "LogSeverity": {
          "type": "string",
          "enum": [
            "verbose",
            "debug",
            "info",
            "warn",
            "error",
            "critical"
          ],
          "title": "LogSeverity"
        },
        "MetricEvent": {
          "properties": {
            "trace_id": {
              "type": "string",
              "title": "Trace Id"
            },
            "span_id": {
              "type": "string",
              "title": "Span Id"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "title": "Timestamp"
            },
            "attributes": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Attributes"
            },
            "type": {
              "type": "string",
              "const": "metric",
              "title": "Type",
              "default": "metric"
            },
            "metric": {
              "type": "string",
              "title": "Metric"
            },
            "value": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "number"
                }
              ],
              "title": "Value"
            },
            "unit": {
              "type": "string",
              "title": "Unit"
            }
          },
          "type": "object",
          "required": [
            "trace_id",
            "span_id",
            "timestamp",
            "metric",
            "value",
            "unit"
          ],
          "title": "MetricEvent"
        },
        "ModelCandidate": {
          "properties": {
            "type": {
              "type": "string",
              "const": "model",
              "title": "Type",
              "default": "model"
            },
            "model": {
              "type": "string",
              "title": "Model"
            },
            "sampling_params": {
              "$ref": "#/components/schemas/SamplingParams"
            },
            "system_message": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SystemMessage"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "model",
            "sampling_params"
          ],
          "title": "ModelCandidate",
          "description": "A model candidate for evaluation.\n\n:param model: The model ID to evaluate.\n:param sampling_params: The sampling parameters for the model.\n:param system_message: (Optional) The system message providing instructions or context to the model."
        },
        "ModelType": {
          "type": "string",
          "enum": [
            "llm",
            "embedding"
          ],
          "title": "ModelType"
        },
        "NumberType": {
          "properties": {
            "type": {
              "type": "string",
              "const": "number",
              "title": "Type",
              "default": "number"
            }
          },
          "type": "object",
          "title": "NumberType"
        },
        "ObjectType": {
          "properties": {
            "type": {
              "type": "string",
              "const": "object",
              "title": "Type",
              "default": "object"
            }
          },
          "type": "object",
          "title": "ObjectType"
        },
        "QueryCondition": {
          "properties": {
            "key": {
              "type": "string",
              "title": "Key"
            },
            "op": {
              "$ref": "#/components/schemas/QueryConditionOp"
            },
            "value": {
              "title": "Value"
            }
          },
          "type": "object",
          "required": [
            "key",
            "op",
            "value"
          ],
          "title": "QueryCondition"
        },
        "QueryConditionOp": {
          "type": "string",
          "enum": [
            "eq",
            "ne",
            "gt",
            "lt"
          ],
          "title": "QueryConditionOp"
        },
        "RAGDocument": {
          "properties": {
            "document_id": {
              "type": "string",
              "title": "Document Id"
            },
            "content": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ImageContentItem"
                    },
                    {
                      "$ref": "#/components/schemas/TextContentItem"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image": "#/components/schemas/ImageContentItem",
                      "text": "#/components/schemas/TextContentItem"
                    }
                  }
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ImageContentItem"
                      },
                      {
                        "$ref": "#/components/schemas/TextContentItem"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "image": "#/components/schemas/ImageContentItem",
                        "text": "#/components/schemas/TextContentItem"
                      }
                    }
                  },
                  "type": "array"
                },
                {
                  "$ref": "#/components/schemas/URL"
                }
              ],
              "title": "Content"
            },
            "mime_type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Mime Type"
            },
            "metadata": {
              "type": "object",
              "title": "Metadata"
            }
          },
          "type": "object",
          "required": [
            "document_id",
            "content"
          ],
          "title": "RAGDocument"
        },
        "RAGQueryConfig": {
          "properties": {
            "query_generator_config": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DefaultRAGQueryGeneratorConfig"
                },
                {
                  "$ref": "#/components/schemas/LLMRAGQueryGeneratorConfig"
                }
              ],
              "title": "Query Generator Config",
              "default": {
                "type": "default",
                "separator": " "
              },
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "default": "#/components/schemas/DefaultRAGQueryGeneratorConfig",
                  "llm": "#/components/schemas/LLMRAGQueryGeneratorConfig"
                }
              }
            },
            "max_tokens_in_context": {
              "type": "integer",
              "title": "Max Tokens In Context",
              "default": 4096
            },
            "max_chunks": {
              "type": "integer",
              "title": "Max Chunks",
              "default": 5
            }
          },
          "type": "object",
          "title": "RAGQueryConfig"
        },
        "RegexParserScoringFnParams": {
          "properties": {
            "type": {
              "type": "string",
              "const": "regex_parser",
              "title": "Type",
              "default": "regex_parser"
            },
            "parsing_regexes": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parsing Regexes",
              "description": "Regex to extract the answer from generated response"
            },
            "aggregation_functions": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/AggregationFunctionType"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aggregation Functions",
              "description": "Aggregation functions to apply to the scores of each row"
            }
          },
          "type": "object",
          "title": "RegexParserScoringFnParams"
        },
        "SamplingParams": {
          "properties": {
            "strategy": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GreedySamplingStrategy"
                },
                {
                  "$ref": "#/components/schemas/TopPSamplingStrategy"
                },
                {
                  "$ref": "#/components/schemas/TopKSamplingStrategy"
                }
              ],
              "title": "Strategy",
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "greedy": "#/components/schemas/GreedySamplingStrategy",
                  "top_k": "#/components/schemas/TopKSamplingStrategy",
                  "top_p": "#/components/schemas/TopPSamplingStrategy"
                }
              }
            },
            "max_tokens": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Tokens",
              "default": 0
            },
            "repetition_penalty": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Repetition Penalty",
              "default": 1
            }
          },
          "type": "object",
          "title": "SamplingParams"
        },
        "SpanEndPayload": {
          "properties": {
            "type": {
              "type": "string",
              "const": "span_end",
              "title": "Type",
              "default": "span_end"
            },
            "status": {
              "$ref": "#/components/schemas/SpanStatus"
            }
          },
          "type": "object",
          "required": [
            "status"
          ],
          "title": "SpanEndPayload"
        },
        "SpanStartPayload": {
          "properties": {
            "type": {
              "type": "string",
              "const": "span_start",
              "title": "Type",
              "default": "span_start"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "parent_span_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Span Id"
            }
          },
          "type": "object",
          "required": [
            "name"
          ],
          "title": "SpanStartPayload"
        },
        "SpanStatus": {
          "type": "string",
          "enum": [
            "ok",
            "error"
          ],
          "title": "SpanStatus"
        },
        "StopReason": {
          "type": "string",
          "enum": [
            "end_of_turn",
            "end_of_message",
            "out_of_tokens"
          ],
          "title": "StopReason"
        },
        "StringType": {
          "properties": {
            "type": {
              "type": "string",
              "const": "string",
              "title": "Type",
              "default": "string"
            }
          },
          "type": "object",
          "title": "StringType"
        },
        "StructuredLogEvent": {
          "properties": {
            "trace_id": {
              "type": "string",
              "title": "Trace Id"
            },
            "span_id": {
              "type": "string",
              "title": "Span Id"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "title": "Timestamp"
            },
            "attributes": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Attributes"
            },
            "type": {
              "type": "string",
              "const": "structured_log",
              "title": "Type",
              "default": "structured_log"
            },
            "payload": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SpanStartPayload"
                },
                {
                  "$ref": "#/components/schemas/SpanEndPayload"
                }
              ],
              "title": "Payload",
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "span_end": "#/components/schemas/SpanEndPayload",
                  "span_start": "#/components/schemas/SpanStartPayload"
                }
              }
            }
          },
          "type": "object",
          "required": [
            "trace_id",
            "span_id",
            "timestamp",
            "payload"
          ],
          "title": "StructuredLogEvent"
        },
        "SystemMessage": {
          "properties": {
            "role": {
              "type": "string",
              "const": "system",
              "title": "Role",
              "default": "system"
            },
            "content": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ImageContentItem"
                    },
                    {
                      "$ref": "#/components/schemas/TextContentItem"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image": "#/components/schemas/ImageContentItem",
                      "text": "#/components/schemas/TextContentItem"
                    }
                  }
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ImageContentItem"
                      },
                      {
                        "$ref": "#/components/schemas/TextContentItem"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "image": "#/components/schemas/ImageContentItem",
                        "text": "#/components/schemas/TextContentItem"
                      }
                    }
                  },
                  "type": "array"
                }
              ],
              "title": "Content"
            }
          },
          "type": "object",
          "required": [
            "content"
          ],
          "title": "SystemMessage",
          "description": "A system message providing instructions or context to the model.\n\n:param role: Must be \"system\" to identify this as a system message\n:param content: The content of the \"system prompt\". If multiple system messages are provided, they are concatenated. The underlying Llama Stack code may also add other system messages (for example, for formatting tool definitions)."
        },
        "SystemMessageBehavior": {
          "type": "string",
          "enum": [
            "append",
            "replace"
          ],
          "title": "SystemMessageBehavior",
          "description": "Config for how to override the default system prompt.\n\n:cvar append: Appends the provided system message to the default system prompt:\n    https://www.llama.com/docs/model-cards-and-prompt-formats/llama3_2/#-function-definitions-in-the-system-prompt-\n:cvar replace: Replaces the default system prompt with the provided system message. The system message can include the string\n    '{{function_definitions}}' to indicate where the function definitions should be inserted."
        },
        "TextContentItem": {
          "properties": {
            "type": {
              "type": "string",
              "const": "text",
              "title": "Type",
              "default": "text"
            },
            "text": {
              "type": "string",
              "title": "Text"
            }
          },
          "type": "object",
          "required": [
            "text"
          ],
          "title": "TextContentItem",
          "description": "A text content item\n\n:param type: Discriminator type of the content item. Always \"text\"\n:param text: Text content"
        },
        "TextTruncation": {
          "type": "string",
          "enum": [
            "none",
            "start",
            "end"
          ],
          "title": "TextTruncation",
          "description": "Config for how to truncate text for embedding when text is longer than the model's max sequence length. Start and End semantics depend on whether the language is left-to-right or right-to-left.\n\n:cvar none: No truncation (default). If the text is longer than the model's max sequence length, you will get an error.\n:cvar start: Truncate from the start\n:cvar end: Truncate from the end"
        },
        "ToolCall": {
          "properties": {
            "call_id": {
              "type": "string",
              "title": "Call Id"
            },
            "tool_name": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BuiltinTool"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Tool Name"
            },
            "arguments": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "items": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "type": "array"
                  },
                  {
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "type": "object",
              "title": "Arguments"
            }
          },
          "type": "object",
          "required": [
            "call_id",
            "tool_name",
            "arguments"
          ],
          "title": "ToolCall"
        },
        "ToolChoice": {
          "type": "string",
          "enum": [
            "auto",
            "required",
            "none"
          ],
          "title": "ToolChoice",
          "description": "Whether tool use is required or automatic. This is a hint to the model which may not be followed. It depends on the Instruction Following capabilities of the model.\n\n:cvar auto: The model may use tools if it determines that is appropriate.\n:cvar required: The model must use tools.\n:cvar none: The model must not use tools."
        },
        "ToolConfig": {
          "properties": {
            "tool_choice": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ToolChoice"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tool Choice",
              "default": "auto"
            },
            "tool_prompt_format": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ToolPromptFormat"
                },
                {
                  "type": "null"
                }
              ]
            },
            "system_message_behavior": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SystemMessageBehavior"
                },
                {
                  "type": "null"
                }
              ],
              "default": "append"
            }
          },
          "type": "object",
          "title": "ToolConfig",
          "description": "Configuration for tool use.\n\n:param tool_choice: (Optional) Whether tool use is automatic, required, or none. Can also specify a tool name to use a specific tool. Defaults to ToolChoice.auto.\n:param tool_prompt_format: (Optional) Instructs the model how to format tool calls. By default, Llama Stack will attempt to use a format that is best adapted to the model.\n    - `ToolPromptFormat.json`: The tool calls are formatted as a JSON object.\n    - `ToolPromptFormat.function_tag`: The tool calls are enclosed in a \u003Cfunction=function_name\u003E tag.\n    - `ToolPromptFormat.python_list`: The tool calls are output as Python syntax -- a list of function calls.\n:param system_message_behavior: (Optional) Config for how to override the default system prompt.\n    - `SystemMessageBehavior.append`: Appends the provided system message to the default system prompt.\n    - `SystemMessageBehavior.replace`: Replaces the default system prompt with the provided system message. The system message can include the string\n        '{{function_definitions}}' to indicate where the function definitions should be inserted."
        },
        "ToolDef": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "parameters": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/ToolParameter"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parameters"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            }
          },
          "type": "object",
          "required": [
            "name"
          ],
          "title": "ToolDef"
        },
        "ToolDefinition": {
          "properties": {
            "tool_name": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BuiltinTool"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Tool Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "parameters": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/ToolParamDefinition"
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parameters"
            }
          },
          "type": "object",
          "required": [
            "tool_name"
          ],
          "title": "ToolDefinition"
        },
        "ToolParamDefinition": {
          "properties": {
            "param_type": {
              "type": "string",
              "title": "Param Type"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "required": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Required",
              "default": true
            },
            "default": {
              "anyOf": [
                {

                },
                {
                  "type": "null"
                }
              ],
              "title": "Default"
            }
          },
          "type": "object",
          "required": [
            "param_type"
          ],
          "title": "ToolParamDefinition"
        },
        "ToolParameter": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name"
            },
            "parameter_type": {
              "type": "string",
              "title": "Parameter Type"
            },
            "description": {
              "type": "string",
              "title": "Description"
            },
            "required": {
              "type": "boolean",
              "title": "Required",
              "default": true
            },
            "default": {
              "anyOf": [
                {

                },
                {
                  "type": "null"
                }
              ],
              "title": "Default"
            }
          },
          "type": "object",
          "required": [
            "name",
            "parameter_type",
            "description"
          ],
          "title": "ToolParameter"
        },
        "ToolPromptFormat": {
          "type": "string",
          "enum": [
            "json",
            "function_tag",
            "python_list"
          ],
          "title": "ToolPromptFormat",
          "description": "Prompt format for calling custom / zero shot tools.\n\n:cvar json: JSON format for calling tools. It takes the form:\n    {\n        \"type\": \"function\",\n        \"function\" : {\n            \"name\": \"function_name\",\n            \"description\": \"function_description\",\n            \"parameters\": {...}\n        }\n    }\n:cvar function_tag: Function tag format, pseudo-XML. This looks like:\n    \u003Cfunction=function_name\u003E(parameters)\u003C/function\u003E\n\n:cvar python_list: Python list. The output is a valid Python expression that can be\n    evaluated to a list. Each element in the list is a function call. Example:\n    [\"function_name(param1, param2)\", \"function_name(param1, param2)\"]"
        },
        "ToolResponse": {
          "properties": {
            "call_id": {
              "type": "string",
              "title": "Call Id"
            },
            "tool_name": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BuiltinTool"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Tool Name"
            },
            "content": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ImageContentItem"
                    },
                    {
                      "$ref": "#/components/schemas/TextContentItem"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image": "#/components/schemas/ImageContentItem",
                      "text": "#/components/schemas/TextContentItem"
                    }
                  }
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ImageContentItem"
                      },
                      {
                        "$ref": "#/components/schemas/TextContentItem"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "image": "#/components/schemas/ImageContentItem",
                        "text": "#/components/schemas/TextContentItem"
                      }
                    }
                  },
                  "type": "array"
                }
              ],
              "title": "Content"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            }
          },
          "type": "object",
          "required": [
            "call_id",
            "tool_name",
            "content"
          ],
          "title": "ToolResponse"
        },
        "ToolResponseMessage": {
          "properties": {
            "role": {
              "type": "string",
              "const": "tool",
              "title": "Role",
              "default": "tool"
            },
            "call_id": {
              "type": "string",
              "title": "Call Id"
            },
            "content": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ImageContentItem"
                    },
                    {
                      "$ref": "#/components/schemas/TextContentItem"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image": "#/components/schemas/ImageContentItem",
                      "text": "#/components/schemas/TextContentItem"
                    }
                  }
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ImageContentItem"
                      },
                      {
                        "$ref": "#/components/schemas/TextContentItem"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "image": "#/components/schemas/ImageContentItem",
                        "text": "#/components/schemas/TextContentItem"
                      }
                    }
                  },
                  "type": "array"
                }
              ],
              "title": "Content"
            }
          },
          "type": "object",
          "required": [
            "call_id",
            "content"
          ],
          "title": "ToolResponseMessage",
          "description": "A message representing the result of a tool invocation.\n\n:param role: Must be \"tool\" to identify this as a tool response\n:param call_id: Unique identifier for the tool call this response is for\n:param content: The response content from the tool"
        },
        "TopKSamplingStrategy": {
          "properties": {
            "type": {
              "type": "string",
              "const": "top_k",
              "title": "Type",
              "default": "top_k"
            },
            "top_k": {
              "type": "integer",
              "minimum": 1,
              "title": "Top K"
            }
          },
          "type": "object",
          "required": [
            "top_k"
          ],
          "title": "TopKSamplingStrategy"
        },
        "TopPSamplingStrategy": {
          "properties": {
            "type": {
              "type": "string",
              "const": "top_p",
              "title": "Type",
              "default": "top_p"
            },
            "temperature": {
              "anyOf": [
                {
                  "type": "number",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Temperature"
            },
            "top_p": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Top P",
              "default": 0.95
            }
          },
          "type": "object",
          "required": [
            "temperature"
          ],
          "title": "TopPSamplingStrategy"
        },
        "URL": {
          "properties": {
            "uri": {
              "type": "string",
              "title": "Uri"
            }
          },
          "type": "object",
          "required": [
            "uri"
          ],
          "title": "URL"
        },
        "UnionType": {
          "properties": {
            "type": {
              "type": "string",
              "const": "union",
              "title": "Type",
              "default": "union"
            }
          },
          "type": "object",
          "title": "UnionType"
        },
        "UnstructuredLogEvent": {
          "properties": {
            "trace_id": {
              "type": "string",
              "title": "Trace Id"
            },
            "span_id": {
              "type": "string",
              "title": "Span Id"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "title": "Timestamp"
            },
            "attributes": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Attributes"
            },
            "type": {
              "type": "string",
              "const": "unstructured_log",
              "title": "Type",
              "default": "unstructured_log"
            },
            "message": {
              "type": "string",
              "title": "Message"
            },
            "severity": {
              "$ref": "#/components/schemas/LogSeverity"
            }
          },
          "type": "object",
          "required": [
            "trace_id",
            "span_id",
            "timestamp",
            "message",
            "severity"
          ],
          "title": "UnstructuredLogEvent"
        },
        "UserMessage": {
          "properties": {
            "role": {
              "type": "string",
              "const": "user",
              "title": "Role",
              "default": "user"
            },
            "content": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ImageContentItem"
                    },
                    {
                      "$ref": "#/components/schemas/TextContentItem"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image": "#/components/schemas/ImageContentItem",
                      "text": "#/components/schemas/TextContentItem"
                    }
                  }
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ImageContentItem"
                      },
                      {
                        "$ref": "#/components/schemas/TextContentItem"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "image": "#/components/schemas/ImageContentItem",
                        "text": "#/components/schemas/TextContentItem"
                      }
                    }
                  },
                  "type": "array"
                }
              ],
              "title": "Content"
            },
            "context": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ImageContentItem"
                    },
                    {
                      "$ref": "#/components/schemas/TextContentItem"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image": "#/components/schemas/ImageContentItem",
                      "text": "#/components/schemas/TextContentItem"
                    }
                  }
                },
                {
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ImageContentItem"
                      },
                      {
                        "$ref": "#/components/schemas/TextContentItem"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "image": "#/components/schemas/ImageContentItem",
                        "text": "#/components/schemas/TextContentItem"
                      }
                    }
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Context"
            }
          },
          "type": "object",
          "required": [
            "content"
          ],
          "title": "UserMessage",
          "description": "A message from the user in a chat conversation.\n\n:param role: Must be \"user\" to identify this as a user message\n:param content: The content of the message, which can include text and other media\n:param context: (Optional) This field is used internally by Llama Stack to pass RAG context. This field may be removed in the API in the future."
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": [
            "loc",
            "msg",
            "type"
          ],
          "title": "ValidationError"
        },
        "_URLOrData": {
          "properties": {
            "url": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/URL"
                },
                {
                  "type": "null"
                }
              ]
            },
            "data": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "contentEncoding": "base64",
              "title": "Data"
            }
          },
          "type": "object",
          "title": "_URLOrData",
          "description": "A URL or a base64 encoded string\n\n:param url: A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.\n:param data: base64 encoded image data as string"
        }
      }
    }
  }
